// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit fb41e50eb73573b70eea532aeb6158eaac06fae0).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  BinaryReader,
  BinaryWriter,
  SumTypeVariant
} from '@clockworklabs/spacetimedb-sdk'
// A namespace for generated variants and helper functions.
export namespace TradeSessionStatus {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type SessionOffered = { tag: 'SessionOffered' }
  export type SessionAccepted = { tag: 'SessionAccepted' }
  export type InitiatorAccepted = { tag: 'InitiatorAccepted' }
  export type AcceptorAccepted = { tag: 'AcceptorAccepted' }
  export type SessionResolved = { tag: 'SessionResolved' }

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const SessionOffered = { tag: 'SessionOffered' }
  export const SessionAccepted = { tag: 'SessionAccepted' }
  export const InitiatorAccepted = { tag: 'InitiatorAccepted' }
  export const AcceptorAccepted = { tag: 'AcceptorAccepted' }
  export const SessionResolved = { tag: 'SessionResolved' }

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant('SessionOffered', AlgebraicType.createProductType([])),
      new SumTypeVariant(
        'SessionAccepted',
        AlgebraicType.createProductType([])
      ),
      new SumTypeVariant(
        'InitiatorAccepted',
        AlgebraicType.createProductType([])
      ),
      new SumTypeVariant(
        'AcceptorAccepted',
        AlgebraicType.createProductType([])
      ),
      new SumTypeVariant('SessionResolved', AlgebraicType.createProductType([]))
    ])
  }

  export function serialize(
    writer: BinaryWriter,
    value: TradeSessionStatus
  ): void {
    TradeSessionStatus.getTypeScriptAlgebraicType().serialize(writer, value)
  }

  export function deserialize(reader: BinaryReader): TradeSessionStatus {
    return TradeSessionStatus.getTypeScriptAlgebraicType().deserialize(reader)
  }
}

// The tagged union or sum type for the algebraic type `TradeSessionStatus`.
export type TradeSessionStatus =
  | TradeSessionStatus.SessionOffered
  | TradeSessionStatus.SessionAccepted
  | TradeSessionStatus.InitiatorAccepted
  | TradeSessionStatus.AcceptorAccepted
  | TradeSessionStatus.SessionResolved

export default TradeSessionStatus
