// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit fb41e50eb73573b70eea532aeb6158eaac06fae0).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  BinaryReader,
  BinaryWriter,
  ProductTypeElement,
  TimeDuration,
  Timestamp
} from '@clockworklabs/spacetimedb-sdk'
import { MoveValidationStrikeCounterState as __MoveValidationStrikeCounterState } from './move_validation_strike_counter_state_type'
import { OffsetCoordinatesFloat as __OffsetCoordinatesFloat } from './offset_coordinates_float_type'

export type ResetMobileEntityTimer = {
  scheduledId: bigint
  scheduledAt:
    | { tag: 'Interval'; value: TimeDuration }
    | { tag: 'Time'; value: Timestamp }
  ownerEntityId: bigint
  position: __OffsetCoordinatesFloat | undefined
  strikeCounterToUpdate: __MoveValidationStrikeCounterState | undefined
}

/**
 * A namespace for generated helper functions.
 */
export namespace ResetMobileEntityTimer {
  /**
   * A function which returns this type represented as an AlgebraicType.
   * This function is derived from the AlgebraicType used to generate this type.
   */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement('scheduledId', AlgebraicType.createU64Type()),
      new ProductTypeElement(
        'scheduledAt',
        AlgebraicType.createScheduleAtType()
      ),
      new ProductTypeElement('ownerEntityId', AlgebraicType.createU64Type()),
      new ProductTypeElement(
        'position',
        AlgebraicType.createOptionType(
          __OffsetCoordinatesFloat.getTypeScriptAlgebraicType()
        )
      ),
      new ProductTypeElement(
        'strikeCounterToUpdate',
        AlgebraicType.createOptionType(
          __MoveValidationStrikeCounterState.getTypeScriptAlgebraicType()
        )
      )
    ])
  }

  export function serialize(
    writer: BinaryWriter,
    value: ResetMobileEntityTimer
  ): void {
    ResetMobileEntityTimer.getTypeScriptAlgebraicType().serialize(writer, value)
  }

  export function deserialize(reader: BinaryReader): ResetMobileEntityTimer {
    return ResetMobileEntityTimer.getTypeScriptAlgebraicType().deserialize(
      reader
    )
  }
}
