// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit fb41e50eb73573b70eea532aeb6158eaac06fae0).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  BinaryReader,
  BinaryWriter,
  SumTypeVariant
} from '@clockworklabs/spacetimedb-sdk'
// A namespace for generated variants and helper functions.
export namespace EnvironmentResistanceType {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type Cold = { tag: 'Cold' }
  export type Heat = { tag: 'Heat' }

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const Cold = { tag: 'Cold' }
  export const Heat = { tag: 'Heat' }

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant('Cold', AlgebraicType.createProductType([])),
      new SumTypeVariant('Heat', AlgebraicType.createProductType([]))
    ])
  }

  export function serialize(
    writer: BinaryWriter,
    value: EnvironmentResistanceType
  ): void {
    EnvironmentResistanceType.getTypeScriptAlgebraicType().serialize(
      writer,
      value
    )
  }

  export function deserialize(reader: BinaryReader): EnvironmentResistanceType {
    return EnvironmentResistanceType.getTypeScriptAlgebraicType().deserialize(
      reader
    )
  }
}

// The tagged union or sum type for the algebraic type `EnvironmentResistanceType`.
export type EnvironmentResistanceType =
  | EnvironmentResistanceType.Cold
  | EnvironmentResistanceType.Heat

export default EnvironmentResistanceType
